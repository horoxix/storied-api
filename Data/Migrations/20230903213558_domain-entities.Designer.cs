// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(StoriedDbContext))]
    [Migration("20230903213558_domain-entities")]
    partial class domainentities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.21");

            modelBuilder.Entity("Data.Entities.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EventDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EventTypeId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Data.Entities.EventType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("EventTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cf7c459c-77b3-43eb-8f08-4e57a37bfa27"),
                            Name = "Birth"
                        },
                        new
                        {
                            Id = new Guid("e3706eeb-aff7-484b-90fb-3b1621dd9d22"),
                            Name = "Death"
                        },
                        new
                        {
                            Id = new Guid("25f66e46-e87f-4a85-a4c1-4ee512907de3"),
                            Name = "Marriage"
                        });
                });

            modelBuilder.Entity("Data.Entities.Gender", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0781acf3-9ff7-4508-86ca-07553240130e"),
                            Name = "Male"
                        },
                        new
                        {
                            Id = new Guid("3e299323-6d9a-4576-88ab-e5efe37073be"),
                            Name = "Female"
                        },
                        new
                        {
                            Id = new Guid("5608bf07-a2cf-4588-a76e-c9d0057b848e"),
                            Name = "Non-binary"
                        },
                        new
                        {
                            Id = new Guid("525b3984-4ed3-4fef-af6b-cf8198b1bc0f"),
                            Name = "Transgender"
                        },
                        new
                        {
                            Id = new Guid("25a9ad5c-623e-4e8a-9ea3-3dffd9c15c21"),
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("Data.Entities.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5bf7744e-c13a-446e-9b0d-398a23bdf5ee"),
                            Name = "Orem"
                        },
                        new
                        {
                            Id = new Guid("2df653ac-f256-46d3-89f9-a5917a916efd"),
                            Name = "Provo"
                        },
                        new
                        {
                            Id = new Guid("9b158b76-ba87-40b3-8360-b210d0436dfb"),
                            Name = "New York"
                        },
                        new
                        {
                            Id = new Guid("0c088ee9-1a62-47a8-a309-5679540e2d86"),
                            Name = "San Francisco"
                        },
                        new
                        {
                            Id = new Guid("cc28c6f5-7f02-4213-b71e-d4e7d741c0b2"),
                            Name = "London"
                        },
                        new
                        {
                            Id = new Guid("28fcc8c5-b1e8-4316-a3a1-4da04eebffd3"),
                            Name = "Tokyo"
                        });
                });

            modelBuilder.Entity("Data.Entities.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BirthEventId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DeathEventId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GenderId")
                        .HasColumnType("TEXT");

                    b.Property<string>("GivenName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BirthEventId");

                    b.HasIndex("DeathEventId");

                    b.HasIndex("GenderId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("Data.Entities.Event", b =>
                {
                    b.HasOne("Data.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Data.Entities.Person", b =>
                {
                    b.HasOne("Data.Entities.Event", "BirthEvent")
                        .WithMany()
                        .HasForeignKey("BirthEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Event", "DeathEvent")
                        .WithMany()
                        .HasForeignKey("DeathEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BirthEvent");

                    b.Navigation("DeathEvent");

                    b.Navigation("Gender");
                });
#pragma warning restore 612, 618
        }
    }
}
